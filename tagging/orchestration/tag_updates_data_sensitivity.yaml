main:
    params: [args]
    steps:
      - sensitive_tag_crm:
          call: trigger_job_flow
          args:
            oauth_token: ${args.oauth_token}
            config_type: "SENSITIVE_TAG_COLUMN"
            config_uuid: "REPLACE_WITH_CRM_DATA_SENSITIVITY_CONFIG_UUID"
          result: sensitive_tag_crm_status
      - sensitive_tag_hr:
          call: trigger_job_flow
          args:
            oauth_token: ${args.oauth_token}
            config_type: "SENSITIVE_TAG_COLUMN"
            config_uuid: "REPLACE_WITH_HR_DATA_SENSITIVITY_CONFIG_UUID"
          result: sensitive_tag_hr_status
      - sensitive_tag_oltp:
          call: trigger_job_flow
          args:
            oauth_token: ${args.oauth_token}
            config_type: "SENSITIVE_TAG_COLUMN"
            config_uuid: "REPLACE_WITH_OLTP_DATA_SENSITIVITY_CONFIG_UUID"
          result: sensitive_tag_oltp_status
      - sensitive_tag_sales:
          call: trigger_job_flow
          args:
            oauth_token: ${args.oauth_token}
            config_type: "SENSITIVE_TAG_COLUMN"
            config_uuid: "REPLACE_WITH_SALES_DATA_SENSITIVITY_CONFIG_UUID"
          result: sensitive_tag_sales_status
      - sensitive_tag_finwire:
          call: trigger_job_flow
          args:
            oauth_token: ${args.oauth_token}
            config_type: "SENSITIVE_TAG_COLUMN"
            config_uuid: "REPLACE_WITH_FINWIRE_DATA_SENSITIVITY_CONFIG_UUID"
          result: sensitive_tag_finwire_status
      - return_message:
          return: "done"
trigger_job_flow:
    params: [oauth_token, config_type, config_uuid]
    steps:
     - job_completion_init:
         assign:
           - tasks_completed: 0
     - trigger_job:
         call: http.post
         args:
           url: REPLACE_WITH_TAG_ENGINE_URL/trigger_job
           headers:
             oauth_token: ${oauth_token}
           auth:
             type: OIDC
           body:
             config_type: ${config_type}
             config_uuid: ${config_uuid}
         result: job_result
     - wait_before_poll:
         call: sys.sleep
         args:
           seconds: 60
     - get_job_status:
         call: http.post
         args:
           url: REPLACE_WITH_TAG_ENGINE_URL/get_job_status
           headers:
             oauth_token: ${oauth_token}
           auth:
             type: OIDC
           body:
             ${job_result.body}
         result: job_status
     - check_if_done:
         switch:
            - condition: '${job_status.body.job_status == "PENDING" or job_status.body.job_status == "RUNNING"}'
              next: wait_before_next_poll    
            - condition: '${job_status.body.job_status == "SUCCESS" or job_status.body.job_status == "ERROR"}'
              return: ${job_status.body}
     - wait_before_next_poll:
         call: sys.sleep
         args:
           seconds: 60
     - job_completion_prev:
         assign:
           - tasks_completed: job_status.body.tasks_completed
         next: get_job_status
     - return_job_status:
         return: ${job_status.body}